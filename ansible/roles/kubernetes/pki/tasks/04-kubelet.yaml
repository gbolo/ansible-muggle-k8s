---
- name: Gather instance facts
  setup:
  delegate_to: "{{ item }}"
  delegate_facts: true
  loop: "{{ groups.worker }}"
  connection: ssh

# server cert for kubelet api endpoint ------------------------------------------
- name: Generate kubelet servers private keys
  openssl_privatekey:
    type: ECC
    curve: "{{ k8s_kubelet.curve }}"
    path: '{{ k8s_pki_dir }}/{{ item }}-kubelet.key'
  loop: "{{ groups.worker | union(groups.master) | unique }}"

- name: Generate kubelet servers csrs
  openssl_csr:
    path: "{{ k8s_pki_dir }}/{{ item }}-kubelet.csr"
    privatekey_path: "{{ k8s_pki_dir }}/{{ item }}-kubelet.key"
    common_name: "system:node:{{ item }}"
    key_usage:
      - digitalSignature
      - keyEncipherment
    key_usage_critical: true
    extended_key_usage:
      - clientAuth
      - serverAuth
    extended_key_usage_critical: true
    organization_name: 'system:nodes'
    subject_alt_name:
      - DNS:{{ item }}
      - IP:127.0.0.1
      - IP:{{ hostvars[item].ansible_default_ipv4.address }}
  loop: "{{ groups.worker | union(groups.master) | unique }}"

- name: Generate kubelet servers certificates
  openssl_certificate:
    path: '{{ k8s_pki_dir }}/{{ item }}-kubelet.crt'
    csr_path: '{{ k8s_pki_dir }}/{{ item }}-kubelet.csr'
    ownca_path: '{{ k8s_pki_dir }}/k8s-ca.crt'
    ownca_privatekey_path: '{{ k8s_pki_dir }}/k8s-ca.key'
    ownca_not_after: "{{ k8s_kubelet.expiration }}"
    ownca_digest: "{{ k8s_kubelet.digest }}"
    provider: ownca
  loop: "{{ groups.worker | union(groups.master) | unique }}"


# client cert for kubelet uses for auth to apiserver ----------------------------
- name: Generate kubelet clients private keys
  openssl_privatekey:
    type: ECC
    curve: "{{ k8s_kubelet.curve }}"
    path: '{{ k8s_pki_dir }}/{{ item }}-kubelet-client.key'
  loop: "{{ groups.worker | union(groups.master) | unique }}"

- name: Generate kubelet clients csrs
  openssl_csr:
    path: "{{ k8s_pki_dir }}/{{ item }}-kubelet-client.csr"
    privatekey_path: "{{ k8s_pki_dir }}/{{ item }}-kubelet-client.key"
    common_name: "system:node:{{ item }}"
    key_usage:
      - digitalSignature
      - keyEncipherment
    key_usage_critical: true
    extended_key_usage: clientAuth
    extended_key_usage_critical: true
    organization_name: 'system:nodes'
  loop: "{{ groups.worker | union(groups.master) | unique }}"

- name: Generate kubelet clients certificates
  openssl_certificate:
    path: '{{ k8s_pki_dir }}/{{ item }}-kubelet-client.crt'
    csr_path: '{{ k8s_pki_dir }}/{{ item }}-kubelet-client.csr'
    ownca_path: '{{ k8s_pki_dir }}/k8s-ca.crt'
    ownca_privatekey_path: '{{ k8s_pki_dir }}/k8s-ca.key'
    ownca_not_after: "{{ k8s_kubelet.expiration }}"
    ownca_digest: "{{ k8s_kubelet.digest }}"
    provider: ownca
  loop: "{{ groups.worker | union(groups.master) | unique }}"
