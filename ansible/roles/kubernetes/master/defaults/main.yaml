---
# ensures that k8s encrypts data before storing it in the etcd cluster
# https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/
# this value should be 256 bits (32 bytes) in length (32 chars should be equivalent)
# NOTE: this value gets checked as an assertion
# encryption_key: some-random-32-characters

# Domain for this cluster. If set, kubelet will configure all containers to search this domain in addition to the host's search domains
k8s_cluster_domain: cluster.local

# CIDR notation IP range for Pods in the cluster. Requires --allocate-node-cidrs to be true
k8s_pod_network_cidr: 10.42.0.0/16

# nodePortAddresses is the --nodeport-addresses value for kube-proxy process. Values must be valid
# IP blocks. These values are as a parameter to select the interfaces where nodeport works.
# In case someone would like to expose a service on localhost for local visit and some other interfaces for
# particular purpose, a list of IP blocks would do that.
# If set it to "127.0.0.0/8", kube-proxy will only select the loopback interface for NodePort.
# If set it to a non-zero IP block, kube-proxy will filter that down to just the IPs that applied to the node.
# An empty string slice is meant to select all network interfaces.
k8s_kubelet_node_port_dddresses:
  - "{{ ansible_default_ipv4.address }}/32"
  - 127.0.0.0/8



#
# reference: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
#

# A CIDR notation IP range from which to assign service cluster IPs. This must not overlap with any IP ranges assigned to nodes or pods.
k8s_service_cluster_ip_range: 10.43.0.0/16
# A port range to reserve for services with NodePort visibility. Example: '30000-32767'. Inclusive at both ends of the range.
k8s_service_node_port_range: "30000-32767"
# CIDR notation IP range for Pods in the cluster. Requires --allocate-node-cidrs to be true
k8s_pod_network_cidr: 10.42.0.0/16

# A set of key=value pairs that enable or disable built-in APIs. Supported options are:
# v1=true|false for the core API group
# <group>/<version>=true|false for a specific API group and version (e.g. apps/v1=true)
# api/all=true|false controls all API versions
# api/ga=true|false controls all API versions of the form v[0-9]+
# api/beta=true|false controls all API versions of the form v[0-9]+beta[0-9]+
# api/alpha=true|false controls all API versions of the form v[0-9]+alpha[0-9]+
# api/legacy is deprecated, and will be removed in a future version
k8s_runtime_config : "api/all=true"

# admission plugins that should be enabled in addition to default enabled ones
k8s_apiserver_enable_admission_plugins:
    # avoid deletion of system reserved namespaces etc
    - NamespaceLifecycle
    # limit what a kubelet can modify (e.g. its own pods).
    - NodeRestriction
    # enforce limits on namespaces
    - LimitRanger
    - ResourceQuota
    # enforce service account automation.
    - ServiceAccount
    # enforce default storage class on PersistentVolumeClaim objects.
    - DefaultStorageClass
    # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#defaulttolerationseconds
    - DefaultTolerationSeconds
    # injects a pod with the fields specified in a matching PodPreset
    - PodPreset
    # acts on creation and modification of the pod and determines if it should be admitted based on the requested security context and the available Pod Security Policies
    # - PodSecurityPolicy

# an endpoint reconciler (master-count, lease, none)
k8s_apiserver_endpoint_reconciler_type: lease

# The number of apiservers running in the cluster, must be a positive number.
# (In use when --endpoint-reconciler-type=master-count is enabled.)
k8s_apiserver_count: "{{ groups['master'] | length }}"

#
# reference: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/
#

# Mask size for node cidr in cluster. Default is 24 for IPv4 and 64 for IPv6.
k8s_node_cidr_mask_size_for_pod_network: 24
