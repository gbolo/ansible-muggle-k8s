- name: Gather instance facts
  setup:
  delegate_to: "{{ item }}"
  delegate_facts: true
  loop: "{{ groups['master'] | union(groups['worker']) | unique }}"

- name: deploy - add required internal IP addreses to hosts file
  blockinfile:
    path: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR ETCD LAN IP(S)"
    state: present
    block: |
      # master nodes
      {% for host in groups['master'] %}
      {{  hostvars[host].ansible_default_ipv4.address }} {{ host }}
      {% endfor %}
      # worker nodes
      {% for host in groups['worker'] %}
      {{  hostvars[host].ansible_default_ipv4.address }} {{ host }}
      {% endfor %}

- name: Create config directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  loop:
    - /etc/kubernetes
    - /etc/kubernetes/kubelet
    - /etc/kubernetes/kube-proxy
    - /etc/kubernetes/manifests

- name: Copy CA certificates
  copy:
    src: "{{ k8s_pki_dir }}/k8s-ca.crt"
    dest: /etc/kubernetes/
    owner: root
    group: root
    mode: 0644

- name: Copy kubelet config file
  template:
    src: etc/kubernetes/kubelet/kubelet-config.yaml
    dest: /etc/kubernetes/kubelet/kubelet-config.yaml
    owner: root
    group: root
    mode: 0644
  notify:
    - restart kubelet

- name: Copy kube proxy config file
  template:
    src: etc/kubernetes/kube-proxy/kube-proxy-config.yaml
    dest: /etc/kubernetes/kube-proxy/kube-proxy-config.yaml
    owner: root
    group: root
    mode: 0644
  notify:
    - restart kube-proxy

- name: Copy certificates and kubeconfig files to node 1
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - src: "{{ k8s_pki_dir }}/{{ inventory_hostname }}-kubelet.crt"
      dest: "/etc/kubernetes/kubelet/"
    - src: "{{ k8s_pki_dir }}/{{ inventory_hostname }}-kubelet.key"
      dest: "/etc/kubernetes/kubelet/"
    - src: "{{ kubeconfig_dir }}/{{ inventory_hostname }}.kubeconfig"
      dest: "/etc/kubernetes/kubelet/"
    - src: "{{ kubeconfig_dir }}/kube-proxy.kubeconfig"
      dest: "/etc/kubernetes/kube-proxy/"

- name: Copy config file for kubelet
  template:
    src: "lib/systemd/system/kubelet.service.j2"
    dest: "/lib/systemd/system/kubelet.service"
    owner: root
    group: root
    mode: 0644
  notify:
    - restart kubelet

- name: Copy config file for kube-proxy
  template:
    src: "lib/systemd/system/kube-proxy.service.j2"
    dest: "/lib/systemd/system/kube-proxy.service"
    owner: root
    group: root
    mode: 0664
  notify:
    - restart kube-proxy

- meta: flush_handlers
