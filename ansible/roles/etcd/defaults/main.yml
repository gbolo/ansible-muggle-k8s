# deployment -------------------------------------------------------------------
etcd_home: "/opt/etcd"
etcd_config_directory: "{{ etcd_home }}/conf"
etcd_data_directory: "{{ etcd_home }}/data"
etcd_bin_directory: "{{ etcd_home }}/bin"

etcd_client_port: "2379"
etcd_peer_port: "2380"

etcd_user:
  id: 30011
  name: etcd

etcd_version: v3.4.25
etcd_archive_url: https://github.com/etcd-io/etcd/releases/download/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz

etcd_initial_cluster_token: oe5lohh1quee9zoomaix7Goh

etcd_config_yaml:
  name: "{{ inventory_hostname }}"
  data-dir: "{{ etcd_data_directory }}"
  logger: "zap"
  log-level: "debug"
  log-outputs: [stderr]

  ## listen addresses (bind to all interfaces in docer container)
  # used for peer-tp-peer etcd communication
  listen-peer-urls: "https://0.0.0.0:2380"
  # used for clients (application) to connect to
  listen-client-urls: "https://0.0.0.0:2379"

  # etcd peer clustering (static)
  initial-advertise-peer-urls: https://{{ inventory_hostname }}:{{ etcd_peer_port | default('2380') }}
  initial-cluster: "{% for host in groups['etcd'] | sort() %}{{ host }}=https://{{ host }}:{{ etcd_peer_port | default('2380') }}{% if not loop.last %},{% endif %}{% endfor %}"
  initial-cluster-state: new
  initial-cluster-token: "{{ etcd_initial_cluster_token }}"

  # etcd endpoint that clients (application) talk to
  advertise-client-urls:  https://{{ inventory_hostname }}:{{ etcd_client_port | default('2379') }}

  ## TLS settings
  # peer-to-peer TLS
  peer-transport-security:
    cert-file: "{{ etcd_tls_directory }}/peer-cert.pem"
    key-file: "{{ etcd_tls_directory }}/peer-key.pem"
    client-cert-auth: "{{ etcd_tls_peer_client_auth | bool }}"
    trusted-ca-file: "{{ etcd_tls_directory }}/peer-ca.pem"
  client-transport-security:
    cert-file: "{{ etcd_tls_directory }}/cert.pem"
    key-file: "{{ etcd_tls_directory }}/key.pem"
    client-cert-auth: "{{ etcd_tls_client_auth | bool }}"
    trusted-ca-file: "{{ etcd_tls_directory }}/client-ca.pem"

# TLS related ------------------------------------------------------------------
# this is where we push the tls certs/keys on the server
etcd_tls_directory: "{{ etcd_home }}/tls"

# this is where we source our tls certs/keys on the ansible host
etcd_tls_ansible_dir: "{{ inventory_dir }}/../../artifacts/pki/etcd"

# TLS used that are client facing
etcd_tls_cert_file: "{{ etcd_tls_ansible_dir }}/{{ inventory_hostname }}-server.crt"
etcd_tls_key_file: "{{ etcd_tls_ansible_dir }}/{{ inventory_hostname }}-server.key"

# TLS used that are for peer-to-peer clustering
etcd_tls_peer_cert_file: "{{ etcd_tls_ansible_dir }}/{{ inventory_hostname }}-peer.crt"
etcd_tls_peer_key_file: "{{ etcd_tls_ansible_dir }}/{{ inventory_hostname }}-peer.key"
etcd_tls_peer_trusted_ca_file: "{{ etcd_tls_ansible_dir }}/etcd-peer-ca.crt"

# mutual TLS for client facing traffic
etcd_tls_client_auth: true
etcd_tls_trusted_ca_file: "{{ etcd_tls_ansible_dir }}/etcd-server-ca.crt"

# mutual TLS for peer-to-peer clustering
etcd_tls_peer_client_auth: true
